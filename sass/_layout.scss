.container {
  max-width: 120rem; //1200 pixels, else 100% of the viewport width
  //this will center the container and its contents
  margin: 8rem auto;
  background-color: var(--color-grey-light-2);
  box-shadow: 0 2rem 6rem var(--shadow-dark);

  //FOR TESTING
  //min-height: 50rem;
}

.header {
  font-size: 1.4rem;
  height: 7rem;
  background-color: #fff;
  border-bottom: var(--line);

  //FLEXBOX SETTINGS
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.content {
  display: flex;
}

.sidebar {
  background-color: var(--color-grey-dark-1);

  //flex grow - determines ability for item to grow if necessary,
  //flex shrink - flex-shrink CSS property sets the flex shrink factor of a flex item.
  //If the size of all flex items is larger than the flex container, items shrink to fit according to flex-shrink.

  flex: 0 0 18%;
  display: flex;
  //rotates the flex direction
  flex-direction: column;
  justify-content: space-between;
}

.hotel-view {
  //element should grow as much as it can
  flex: 1;
  background-color: #fff;

  // for testing purposes
  //height: 80rem;
}

.details {
  display: flex;
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-bottom: var(--line);
  //align-items affets cross axis, which is y axis by default, x axis if using column direction
  align-items: flex-start;
}

.description {
  font-size: 1.4rem;
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  flex: 0 0 60%;
  margin-right: 4.5rem;
}

.user-reviews {
  //elements will grow to fit rest of container, if it was 0 elements would simply
  //just take up space that they need
  flex: 1;
}
